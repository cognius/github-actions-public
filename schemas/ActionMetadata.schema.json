{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/TemplateMetadata<\"action\">",
  "description": "The GitHub Actions metadata when compiling actions",
  "definitions": {
    "TemplateMetadata<\"action\">": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "const": "TemplateMetadata"
        },
        "features": {
          "type": "array",
          "items": {
            "not": {}
          },
          "description": "This helps simplify user data by configure set of fields automatically based on input features and settings."
        },
        "featuresMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigWithFlag<SchemaFeatureConfig<never>>"
          },
          "description": "This should be automatically update based on features field. Any manual update will be overwrite when parsing the data."
        },
        "type": {
          "type": "string",
          "const": "action",
          "description": "The template data type"
        },
        "data": {
          "type": "string",
          "description": "The template data filename"
        },
        "name": {
          "type": "string",
          "description": "The data template name"
        },
        "env": {
          "type": "string",
          "description": "The data template environment"
        },
        "branch": {
          "type": "string",
          "description": "The data template branch"
        },
        "uses": {
          "type": "string",
          "description": "The data template uses string"
        },
        "file": {
          "type": "string",
          "description": "The data template file (absolute path)"
        },
        "pkg": {
          "type": "object",
          "additionalProperties": {},
          "description": "The package.json file content"
        }
      },
      "required": [
        "branch",
        "data",
        "env",
        "file",
        "kind",
        "name",
        "pkg",
        "type",
        "uses"
      ],
      "additionalProperties": false
    },
    "ConfigWithFlag<SchemaFeatureConfig<never>>": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/SchemaFeatureConfig<never>"
        }
      ]
    },
    "SchemaFeatureConfig<never>": {
      "type": "object",
      "additionalProperties": false
    }
  }
}