{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "kind": {
      "anyOf": [
        {
          "type": "string",
          "const": "Example",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "ActionInfo",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "TemplateMetadata",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "DockerPublish",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "HelmDeployment",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "KubeDeployment",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        },
        {
          "type": "string",
          "const": "WorkflowInfo",
          "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
        }
      ],
      "description": "Kind of the schema for field validation and field suggestion. This must be constant value"
    },
    "features": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SchemaFeatureAny"
      },
      "description": "This helps simplify user data by configure set of fields automatically based on input features and settings."
    },
    "featuresMap": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ConfigWithFlag<SchemaFeatureConfig<SchemaFeatureAny>>"
      },
      "description": "This should be automatically update based on features field. Any manual update will be overwrite when parsing the data."
    }
  },
  "required": [
    "kind"
  ],
  "definitions": {
    "SchemaFeatureAny": {
      "$ref": "#/definitions/SchemaFeature<string>",
      "description": "The any schema feature (type helper)"
    },
    "SchemaFeature<string>": {
      "type": "object",
      "properties": {
        "_key": {
          "type": "string",
          "description": "Feature key to identify the feature parser to use"
        },
        "_enabled": {
          "type": "boolean",
          "description": "Set to false to disabled this features",
          "default": true
        }
      },
      "required": [
        "_key"
      ],
      "additionalProperties": false,
      "description": "The schema feature to transform schemas based on feature settings"
    },
    "ConfigWithFlag<SchemaFeatureConfig<SchemaFeatureAny>>": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/SchemaFeatureConfig<SchemaFeatureAny>"
        }
      ]
    },
    "SchemaFeatureConfig<SchemaFeatureAny>": {
      "type": "object",
      "additionalProperties": false
    }
  }
}