{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "anyOf": [
    {
      "$ref": "#/definitions/StSnDockerPublishSchema"
    },
    {
      "$ref": "#/definitions/StSnHelmDeploymentSchema"
    },
    {
      "$ref": "#/definitions/StSnKubeDeploymentSchema"
    }
  ],
  "definitions": {
    "StSnDockerPublishSchema": {
      "$ref": "#/definitions/StSnDockerPublishV1"
    },
    "StSnDockerPublishV1": {
      "$ref": "#/definitions/StSnBase<\"DockerPublish\",\"v1\",interface-262734462-54-926-262734462-0-1068,alias-1919838364-72960-73056-1919838364-0-217694<interface-262734462-54-926-262734462-0-1068>>"
    },
    "StSnBase<\"DockerPublish\",\"v1\",interface-262734462-54-926-262734462-0-1068,alias-1919838364-72960-73056-1919838364-0-217694<interface-262734462-54-926-262734462-0-1068>>": {
      "type": "object",
      "properties": {
        "base": {
          "type": "object",
          "properties": {
            "image": {
              "type": "string",
              "description": "The docker image name (do not included registry url).",
              "default": "redis"
            },
            "registry": {
              "type": "string",
              "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
            },
            "context": {
              "type": "string",
              "description": "The docker path context. It will default to <current-directory> if not defined."
            },
            "dockerfile": {
              "type": "string",
              "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
            },
            "push": {
              "type": "boolean",
              "description": "Set to false, will build docker image, but not push to docker registry.",
              "default": true
            }
          },
          "required": [
            "image"
          ],
          "additionalProperties": false,
          "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
        },
        "environments": {
          "type": "object",
          "properties": {
            "": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The docker image name (do not included registry url).",
                  "default": "redis"
                },
                "registry": {
                  "type": "string",
                  "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                },
                "context": {
                  "type": "string",
                  "description": "The docker path context. It will default to <current-directory> if not defined."
                },
                "dockerfile": {
                  "type": "string",
                  "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                },
                "push": {
                  "type": "boolean",
                  "description": "Set to false, will build docker image, but not push to docker registry.",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "production": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The docker image name (do not included registry url).",
                  "default": "redis"
                },
                "registry": {
                  "type": "string",
                  "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                },
                "context": {
                  "type": "string",
                  "description": "The docker path context. It will default to <current-directory> if not defined."
                },
                "dockerfile": {
                  "type": "string",
                  "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                },
                "push": {
                  "type": "boolean",
                  "description": "Set to false, will build docker image, but not push to docker registry.",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "staging": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The docker image name (do not included registry url).",
                  "default": "redis"
                },
                "registry": {
                  "type": "string",
                  "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                },
                "context": {
                  "type": "string",
                  "description": "The docker path context. It will default to <current-directory> if not defined."
                },
                "dockerfile": {
                  "type": "string",
                  "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                },
                "push": {
                  "type": "boolean",
                  "description": "Set to false, will build docker image, but not push to docker registry.",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "testing": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The docker image name (do not included registry url).",
                  "default": "redis"
                },
                "registry": {
                  "type": "string",
                  "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                },
                "context": {
                  "type": "string",
                  "description": "The docker path context. It will default to <current-directory> if not defined."
                },
                "dockerfile": {
                  "type": "string",
                  "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                },
                "push": {
                  "type": "boolean",
                  "description": "Set to false, will build docker image, but not push to docker registry.",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "development": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The docker image name (do not included registry url).",
                  "default": "redis"
                },
                "registry": {
                  "type": "string",
                  "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                },
                "context": {
                  "type": "string",
                  "description": "The docker path context. It will default to <current-directory> if not defined."
                },
                "dockerfile": {
                  "type": "string",
                  "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                },
                "push": {
                  "type": "boolean",
                  "description": "Set to false, will build docker image, but not push to docker registry.",
                  "default": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
        },
        "version": {
          "type": "string",
          "const": "v1",
          "description": "The version of the schema for select parser should be parse this data."
        },
        "kind": {
          "type": "string",
          "const": "DockerPublish"
        },
        "features": {
          "type": "array",
          "items": {
            "not": {}
          },
          "description": "This helps simplify user data by configure set of fields automatically based on input features and settings."
        },
        "featuresMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigWithFlag<SchemaFeatureConfig<never>>"
          },
          "description": "This should be automatically update based on features field. Any manual update will be overwrite when parsing the data."
        },
        "applications": {
          "$ref": "#/definitions/StSnBaseApp<string,interface-262734462-54-926-262734462-0-1068,alias-1919838364-72960-73056-1919838364-0-217694<interface-262734462-54-926-262734462-0-1068>>",
          "description": "The application specific configuration. This will overrides Global base configuration and Global environment configuration."
        }
      },
      "additionalProperties": false,
      "required": [
        "base",
        "kind",
        "version"
      ],
      "description": "The versionable, application and environment supported configuration schema. The StSn short for SmarterTravel Skynet configuration and will be used by ST Skynet bot.\n\nThe configuration priority as following: 1. Application environment configuration ($.applications.<a>.environments.<e>) 2. Application base configuration ($.applications.<a>.base) 3. Global environment configuration ($.environments.<e>) 3. Global base configuration ($.base)\n\nThe Global base configuration are only required configuration, everything else are optional."
    },
    "ConfigWithFlag<SchemaFeatureConfig<never>>": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/SchemaFeatureConfig<never>"
        }
      ]
    },
    "SchemaFeatureConfig<never>": {
      "type": "object",
      "additionalProperties": false
    },
    "StSnBaseApp<string,interface-262734462-54-926-262734462-0-1068,alias-1919838364-72960-73056-1919838364-0-217694<interface-262734462-54-926-262734462-0-1068>>": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "base": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "description": "The docker image name (do not included registry url).",
                "default": "redis"
              },
              "registry": {
                "type": "string",
                "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
              },
              "context": {
                "type": "string",
                "description": "The docker path context. It will default to <current-directory> if not defined."
              },
              "dockerfile": {
                "type": "string",
                "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
              },
              "push": {
                "type": "boolean",
                "description": "Set to false, will build docker image, but not push to docker registry.",
                "default": true
              }
            },
            "required": [
              "image"
            ],
            "additionalProperties": false,
            "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
          },
          "environments": {
            "type": "object",
            "properties": {
              "": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "The docker image name (do not included registry url).",
                    "default": "redis"
                  },
                  "registry": {
                    "type": "string",
                    "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                  },
                  "context": {
                    "type": "string",
                    "description": "The docker path context. It will default to <current-directory> if not defined."
                  },
                  "dockerfile": {
                    "type": "string",
                    "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Set to false, will build docker image, but not push to docker registry.",
                    "default": true
                  }
                },
                "additionalProperties": false
              },
              "production": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "The docker image name (do not included registry url).",
                    "default": "redis"
                  },
                  "registry": {
                    "type": "string",
                    "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                  },
                  "context": {
                    "type": "string",
                    "description": "The docker path context. It will default to <current-directory> if not defined."
                  },
                  "dockerfile": {
                    "type": "string",
                    "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Set to false, will build docker image, but not push to docker registry.",
                    "default": true
                  }
                },
                "additionalProperties": false
              },
              "staging": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "The docker image name (do not included registry url).",
                    "default": "redis"
                  },
                  "registry": {
                    "type": "string",
                    "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                  },
                  "context": {
                    "type": "string",
                    "description": "The docker path context. It will default to <current-directory> if not defined."
                  },
                  "dockerfile": {
                    "type": "string",
                    "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Set to false, will build docker image, but not push to docker registry.",
                    "default": true
                  }
                },
                "additionalProperties": false
              },
              "testing": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "The docker image name (do not included registry url).",
                    "default": "redis"
                  },
                  "registry": {
                    "type": "string",
                    "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                  },
                  "context": {
                    "type": "string",
                    "description": "The docker path context. It will default to <current-directory> if not defined."
                  },
                  "dockerfile": {
                    "type": "string",
                    "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Set to false, will build docker image, but not push to docker registry.",
                    "default": true
                  }
                },
                "additionalProperties": false
              },
              "development": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "The docker image name (do not included registry url).",
                    "default": "redis"
                  },
                  "registry": {
                    "type": "string",
                    "description": "The docker registry url. This doesn't have any default from the code. However, it should default to input value on workflows if any."
                  },
                  "context": {
                    "type": "string",
                    "description": "The docker path context. It will default to <current-directory> if not defined."
                  },
                  "dockerfile": {
                    "type": "string",
                    "description": "The location of Dockerfile. It will default to Dockerfile if not defined."
                  },
                  "push": {
                    "type": "boolean",
                    "description": "Set to false, will build docker image, but not push to docker registry.",
                    "default": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
          }
        },
        "additionalProperties": false
      }
    },
    "StSnHelmDeploymentSchema": {
      "$ref": "#/definitions/StSnHelmDeploymentV1"
    },
    "StSnHelmDeploymentV1": {
      "$ref": "#/definitions/StSnBase<\"HelmDeployment\",\"v1\",StSnHelmDeploymentV1ConfigBase,StSnHelmDeploymentV1ConfigEnv>"
    },
    "StSnBase<\"HelmDeployment\",\"v1\",StSnHelmDeploymentV1ConfigBase,StSnHelmDeploymentV1ConfigEnv>": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/StSnHelmDeploymentV1ConfigBase",
          "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
        },
        "environments": {
          "type": "object",
          "properties": {
            "": {
              "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
            },
            "production": {
              "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
            },
            "staging": {
              "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
            },
            "testing": {
              "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
            },
            "development": {
              "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
            }
          },
          "additionalProperties": false,
          "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
        },
        "version": {
          "type": "string",
          "const": "v1",
          "description": "The version of the schema for select parser should be parse this data."
        },
        "kind": {
          "type": "string",
          "const": "HelmDeployment"
        },
        "features": {
          "type": "array",
          "items": {
            "not": {}
          },
          "description": "This helps simplify user data by configure set of fields automatically based on input features and settings."
        },
        "featuresMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigWithFlag<SchemaFeatureConfig<never>>"
          },
          "description": "This should be automatically update based on features field. Any manual update will be overwrite when parsing the data."
        },
        "applications": {
          "$ref": "#/definitions/StSnBaseApp<string,StSnHelmDeploymentV1ConfigBase,StSnHelmDeploymentV1ConfigEnv>",
          "description": "The application specific configuration. This will overrides Global base configuration and Global environment configuration."
        }
      },
      "additionalProperties": false,
      "required": [
        "base",
        "kind",
        "version"
      ],
      "description": "The versionable, application and environment supported configuration schema. The StSn short for SmarterTravel Skynet configuration and will be used by ST Skynet bot.\n\nThe configuration priority as following: 1. Application environment configuration ($.applications.<a>.environments.<e>) 2. Application base configuration ($.applications.<a>.base) 3. Global environment configuration ($.environments.<e>) 3. Global base configuration ($.base)\n\nThe Global base configuration are only required configuration, everything else are optional."
    },
    "StSnHelmDeploymentV1ConfigBase": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the deployment (release name)."
        },
        "namespace": {
          "type": "string",
          "description": "The Kubernetes namespace which helm will be deploy on."
        },
        "chart": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/definitions/ChartType",
              "description": "The helm-chart type."
            },
            "name": {
              "type": "string",
              "description": "The helm-chart name to install. Name will be append to location field for oci and local. However, for http type, this is the name of the helm-chart itself. (Same name found on index.yaml file)"
            },
            "location": {
              "type": "string",
              "description": "The helm-chart location. Depends on type of chart. Location can be either relative path to chart directory (local), url to chart index.yaml file (http), or url to container registry (oci)."
            },
            "version": {
              "type": "string",
              "description": "The helm-chart version. It will default to latest if not defined."
            }
          },
          "required": [
            "type",
            "name",
            "location"
          ],
          "additionalProperties": false,
          "description": "The helm-chart use for deployment."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "List of values.yaml file path."
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Overrides values.yaml file using --set options. The values of this field will be parsed by handlebars template.\n\nBelow is the template variables: app: {   name: data.app,   environment: data.environment,   version: data.version,   tag: data.tag,   digest: data.digest, }"
        },
        "timeout": {
          "type": "string",
          "description": "The install timeout. It will default to 5m if not defined."
        },
        "force": {
          "type": "boolean",
          "description": "Helm will force resource updates through a replacement strategy. It will default to false if not defined.",
          "examples": [
            false
          ]
        },
        "rollback": {
          "type": "boolean",
          "description": "Automatically rollback when application cannot start within timeout. It will default to true if not defined.",
          "examples": [
            true
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "ChartType": {
      "type": "string",
      "enum": [
        "oci",
        "http",
        "local"
      ]
    },
    "StSnHelmDeploymentV1ConfigEnv": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "List of values.yaml file path."
        },
        "namespace": {
          "type": "string",
          "description": "The Kubernetes namespace which helm will be deploy on."
        },
        "name": {
          "type": "string",
          "description": "The name of the deployment (release name)."
        },
        "chart": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/definitions/ChartType",
              "description": "The helm-chart type."
            },
            "name": {
              "type": "string",
              "description": "The helm-chart name to install. Name will be append to location field for oci and local. However, for http type, this is the name of the helm-chart itself. (Same name found on index.yaml file)"
            },
            "location": {
              "type": "string",
              "description": "The helm-chart location. Depends on type of chart. Location can be either relative path to chart directory (local), url to chart index.yaml file (http), or url to container registry (oci)."
            },
            "version": {
              "type": "string",
              "description": "The helm-chart version. It will default to latest if not defined."
            }
          },
          "required": [
            "type",
            "name",
            "location"
          ],
          "additionalProperties": false,
          "description": "The helm-chart use for deployment."
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Overrides values.yaml file using --set options. The values of this field will be parsed by handlebars template.\n\nBelow is the template variables: app: {   name: data.app,   environment: data.environment,   version: data.version,   tag: data.tag,   digest: data.digest, }"
        },
        "timeout": {
          "type": "string",
          "description": "The install timeout. It will default to 5m if not defined."
        },
        "force": {
          "type": "boolean",
          "description": "Helm will force resource updates through a replacement strategy. It will default to false if not defined.",
          "examples": [
            false
          ]
        },
        "rollback": {
          "type": "boolean",
          "description": "Automatically rollback when application cannot start within timeout. It will default to true if not defined.",
          "examples": [
            true
          ]
        }
      },
      "required": [
        "namespace",
        "values"
      ]
    },
    "StSnBaseApp<string,StSnHelmDeploymentV1ConfigBase,StSnHelmDeploymentV1ConfigEnv>": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/definitions/StSnHelmDeploymentV1ConfigBase",
            "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
          },
          "environments": {
            "type": "object",
            "properties": {
              "": {
                "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
              },
              "production": {
                "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
              },
              "staging": {
                "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
              },
              "testing": {
                "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
              },
              "development": {
                "$ref": "#/definitions/StSnHelmDeploymentV1ConfigEnv"
              }
            },
            "additionalProperties": false,
            "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
          }
        },
        "additionalProperties": false
      }
    },
    "StSnKubeDeploymentSchema": {
      "$ref": "#/definitions/StSnKubeDeploymentV1"
    },
    "StSnKubeDeploymentV1": {
      "$ref": "#/definitions/StSnBase<\"KubeDeployment\",\"v1\",StSnKubeDeploymentV1Config>"
    },
    "StSnBase<\"KubeDeployment\",\"v1\",StSnKubeDeploymentV1Config>": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/StSnKubeDeploymentV1Config",
          "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
        },
        "environments": {
          "type": "object",
          "properties": {
            "": {
              "$ref": "#/definitions/StSnKubeDeploymentV1Config"
            },
            "production": {
              "$ref": "#/definitions/StSnKubeDeploymentV1Config"
            },
            "staging": {
              "$ref": "#/definitions/StSnKubeDeploymentV1Config"
            },
            "testing": {
              "$ref": "#/definitions/StSnKubeDeploymentV1Config"
            },
            "development": {
              "$ref": "#/definitions/StSnKubeDeploymentV1Config"
            }
          },
          "additionalProperties": false,
          "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
        },
        "version": {
          "type": "string",
          "const": "v1",
          "description": "The version of the schema for select parser should be parse this data."
        },
        "kind": {
          "type": "string",
          "const": "KubeDeployment"
        },
        "features": {
          "type": "array",
          "items": {
            "not": {}
          },
          "description": "This helps simplify user data by configure set of fields automatically based on input features and settings."
        },
        "featuresMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConfigWithFlag<SchemaFeatureConfig<never>>"
          },
          "description": "This should be automatically update based on features field. Any manual update will be overwrite when parsing the data."
        },
        "applications": {
          "$ref": "#/definitions/StSnBaseApp<string,StSnKubeDeploymentV1Config,StSnKubeDeploymentV1Config>",
          "description": "The application specific configuration. This will overrides Global base configuration and Global environment configuration."
        }
      },
      "additionalProperties": false,
      "required": [
        "base",
        "kind",
        "version"
      ],
      "description": "The versionable, application and environment supported configuration schema. The StSn short for SmarterTravel Skynet configuration and will be used by ST Skynet bot.\n\nThe configuration priority as following: 1. Application environment configuration ($.applications.<a>.environments.<e>) 2. Application base configuration ($.applications.<a>.base) 3. Global environment configuration ($.environments.<e>) 3. Global base configuration ($.base)\n\nThe Global base configuration are only required configuration, everything else are optional."
    },
    "StSnKubeDeploymentV1Config": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        }
      },
      "required": [
        "namespace"
      ],
      "additionalProperties": false
    },
    "StSnBaseApp<string,StSnKubeDeploymentV1Config,StSnKubeDeploymentV1Config>": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "base": {
            "$ref": "#/definitions/StSnKubeDeploymentV1Config",
            "description": "The base configuration. It will be override by environment specific configuration if existed.\n\nIf it on application specific configuration, it will also overrides global base configuration as well."
          },
          "environments": {
            "type": "object",
            "properties": {
              "": {
                "$ref": "#/definitions/StSnKubeDeploymentV1Config"
              },
              "production": {
                "$ref": "#/definitions/StSnKubeDeploymentV1Config"
              },
              "staging": {
                "$ref": "#/definitions/StSnKubeDeploymentV1Config"
              },
              "testing": {
                "$ref": "#/definitions/StSnKubeDeploymentV1Config"
              },
              "development": {
                "$ref": "#/definitions/StSnKubeDeploymentV1Config"
              }
            },
            "additionalProperties": false,
            "description": "The environment specific configuration.\n\nIf it on application specific configuration, it will also overrides global environment configuration as well."
          }
        },
        "additionalProperties": false
      }
    }
  }
}